<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8">
  <title>Entra√Ænement au comptage de cartes</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      text-align: center;
      margin-top: 50px;
      background-color: #0b6623; /* vert tapis de casino */
      color: white;
    }
    .cards {
      font-size: 28px;
      margin-bottom: 20px;
    }
    .buttons button {
      padding: 10px 20px;
      margin: 10px;
      font-size: 18px;
      cursor: pointer;
    }
    .result {
      font-size: 20px;
      margin-top: 20px;
    }
    button {
      border: none;
      border-radius: 5px;
    }
  </style>
</head>
<body>

  <h1>Comptage de cartes (Hi-Lo)</h1>
  <div class="cards" id="cardSequence"></div>
  <div class="buttons" id="options"></div>
  <div class="result" id="result"></div>
  <button onclick="startGame()">üîÑ Nouvelle suite</button>

  <script>
    const cardValues = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];

    function generateSequence() {
      const length = Math.floor(Math.random() * 11) + 10; // entre 10 et 20 cartes
      let sequence = [];
      for (let i = 0; i < length; i++) {
        sequence.push(cardValues[Math.floor(Math.random() * cardValues.length)]);
      }
      return sequence;
    }

    function calculateRunningCount(cards) {
      let count = 0;
      cards.forEach(card => {
        if (['2','3','4','5','6'].includes(card)) count++;
        else if (['10','J','Q','K','A'].includes(card)) count--;
      });
      return count;
    }

    function shuffle(array) {
      for (let i = array.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [array[i], array[j]] = [array[j], array[i]];
      }
    }

    function startGame() {
      const cards = generateSequence();
      const correctCount = calculateRunningCount(cards);
      const allOptions = [correctCount];

      while (allOptions.length < 3) {
        let fake = correctCount + (Math.floor(Math.random() * 5) - 2);
        if (!allOptions.includes(fake)) {
          allOptions.push(fake);
        }
      }

      shuffle(allOptions);

      // Affichage des cartes avec couleur rouge/noir al√©atoire
      document.getElementById("cardSequence").innerHTML = cards.map(card => {
        const color = Math.random() < 0.5 ? 'red' : 'black';
        return `<span style="color:${color}; margin: 0 4px;">${card}</span>`;
      }).join("");

      // Effacer les anciens boutons
      const optionsDiv = document.getElementById("options");
      optionsDiv.innerHTML = "";

      // R√©initialiser le r√©sultat
      document.getElementById("result").innerHTML = "";

      // Ajouter les nouveaux boutons
      allOptions.forEach(option => {
        const btn = document.createElement("button");
        btn.innerText = option;
        btn.onclick = () => {
          const result = document.getElementById("result");
          if (option === correctCount) {
            result.innerHTML = "‚úÖ <span style='color:lightgreen;'>Correct !</span>";
          } else {
            result.innerHTML = `‚ùå <span style='color:red;'>Faux ! Le bon compte √©tait ${correctCount}</span>`;
          }
        };
        optionsDiv.appendChild(btn);
      });
    }

    // Lancer une premi√®re fois au chargement
    window.onload = startGame;
  </script>

</body>
</html>
